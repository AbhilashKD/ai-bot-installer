nameOverride: "storysakhi"
fullnameOverride: "storysakhi"

replicaCount: 1

image:
  repository: story_sakhi_api_service
  tag: "latest"
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}
commonAnnotations: {}

log_level: INFO
telemetry_url: "http://telemetry-service:9001"
telemetry_log_enabled: "true"
docs_min_score: ""

global:
  openai_baseurl: ""
  openai_version: ""
  gpt_model: ""
  bhasini_endpoint_url: ""
  bhasini_api_key: ""
  bucket_endpoint_url: ""
  bucket_region_name: ""
  bucket_name: ""
  bucket_secret_key: ""
  bucket_access_key: ""
  marqo_url: ""
  marqo_index_name: ""
  env: "dev"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

securityContext: {}
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
      - /

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

# livenessProbe: {}
# Example:
livenessProbe:
  httpGet:
    path: "/healthz"
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

# readinessProbe: {}
# Example:
readinessProbe:
  httpGet:
    path: "/ready"
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true
  mountPath: /config

serviceAccount:
  create: true
  name: ""

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {} # additional labels e.g. release: prometheus
  honorLabels: true
  jobLabel: "app.kubernetes.io/name"

# Example values.yaml structure
initContainers: {}
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

sidecars: {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"] # Run a shell script that tails the log file

opa:
  enabled: false
